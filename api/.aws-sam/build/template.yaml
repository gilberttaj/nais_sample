AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Nais Amplify-like Authentication Library with Google Workspace Email
  Validation
Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: java11
    Architectures:
    - x86_64
    Environment:
      Variables:
        AUTH_LIBRARY_VERSION: 2.1.0
        AUTH_ARCHITECTURE: amplify-like
        WORKSPACE_AUTH_ENABLED: 'true'
Parameters:
  Stage:
    Type: String
    Description: Deployment stage
    Default: dev
    AllowedValues:
    - dev
    - staging
    - prod
  VpcId:
    Type: String
    Description: VPC ID where API Gateway and Lambda functions will be deployed
  SubnetId1:
    Type: String
    Description: First private subnet ID for Lambda VPC configuration
  SubnetId2:
    Type: String
    Description: Second private subnet ID for Lambda VPC configuration
  ApiGatewayVpcEndpointId:
    Type: String
    Description: VPC Endpoint ID for API Gateway private access
  CognitoUserPoolId:
    Type: String
    Description: ID of the existing Cognito User Pool for authentication
  CognitoUserPoolClientSecret:
    Type: String
    Description: Cognito User Pool App Client Secret
    NoEcho: true
  CognitoUserPoolClientId:
    Type: String
    Description: ID of the Cognito User Pool Client
    Default: ''
  GoogleClientId:
    Type: String
    Description: Google OAuth Client ID
    NoEcho: true
  GoogleClientSecret:
    Type: String
    Description: Google OAuth Client Secret
    NoEcho: true
  AllowedEmailDomains:
    Type: CommaDelimitedList
    Description: List of allowed email domains for workspace authentication (e.g.,
      nais.com,subsidiary.com)
    Default: nais.com,company.com
  WorkspaceAuthStrict:
    Type: String
    Description: Enable strict workspace authentication (true/false)
    Default: 'true'
  CognitoDomainUrl:
    Type: String
    Description: Full URL of the Cognito domain
    Default: https://nais-stage.auth.ap-northeast-1.amazoncognito.com
  DBHost:
    Type: String
    Description: RDS Host name (optional)
    Default: localhost
  DBPort:
    Type: String
    Description: RDS Port (optional)
    Default: '5432'
  DBName:
    Type: String
    Description: Database name (optional)
    Default: nais
  DBUser:
    Type: String
    Description: Database username (optional)
    Default: postgres
  DBPassword:
    Type: String
    Description: Database password (optional)
    NoEcho: true
    Default: password
  FrontendUrl:
    Type: String
    Description: Frontend application URL for OAuth redirects
    Default: https://c3cb9bzz3k.ap-northeast-1.awsapprunner.com
Conditions:
  IsProduction:
    Fn::Equals:
    - Ref: Stage
    - prod
Resources:
  AuthLibrarySecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name:
        Fn::Sub: ${Stage}-nais-auth-secrets-${AWS::StackName}
      Description:
        Fn::Sub: Authentication secrets for Nais Amplify-like library with workspace
          validation (${Stage})
      SecretString:
        Fn::Sub:
        - "{\n  \"client_id\": \"${CognitoUserPoolClientId}\",\n  \"client_secret\"\
          : \"${CognitoUserPoolClientSecret}\",\n  \"google_client_id\": \"${GoogleClientId}\"\
          ,\n  \"google_client_secret\": \"${GoogleClientSecret}\",\n  \"cognito_domain_url\"\
          : \"${CognitoDomainUrl}\",\n  \"google_redirect_uri\": \"https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/google/callback\"\
          ,\n  \"oauth_callback_url\": \"https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/google/callback\"\
          ,\n  \"frontend_url\": \"${FrontendUrl}\",\n  \"user_pool_id\": \"${CognitoUserPoolId}\"\
          ,\n  \"auth_library_version\": \"2.1.0\",\n  \"stage\": \"${Stage}\",\n\
          \  \"workspace_auth_enabled\": \"${WorkspaceAuthStrict}\",\n  \"allowed_domains\"\
          : \"${DomainsString}\"\n}\n"
        - DomainsString:
            Fn::Join:
            - ','
            - Fn::Split:
              - '

                '
              - Fn::Join:
                - '

                  '
                - Ref: AllowedEmailDomains
      Tags:
      - Key: Application
        Value: Nais
      - Key: Environment
        Value:
          Ref: Stage
      - Key: Component
        Value: Authentication
      - Key: WorkspaceAuth
        Value:
          Ref: WorkspaceAuthStrict
  AmplifyAuthSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription:
        Fn::Sub: Security group for Nais Amplify-like Auth Lambda with Workspace validation
          (${Stage})
      VpcId:
        Ref: VpcId
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: '0.0.0.0/0'
        Description: HTTPS for AWS services and Google OAuth APIs
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: '0.0.0.0/0'
        Description: HTTP for redirects and health checks
      - IpProtocol: udp
        FromPort: 53
        ToPort: 53
        CidrIp: '0.0.0.0/0'
        Description: DNS resolution
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${Stage}-amplify-auth-security-group
      - Key: Application
        Value: Nais
      - Key: Environment
        Value:
          Ref: Stage
  AmplifyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: Nais-AmplifyAuth-WorkspaceValidation-${Stage}
      Description:
        Fn::Sub: Nais Amplify-like Authentication Handler with Google Workspace email
          validation (${Stage})
      CodeUri: AmplifyAuthFunction
      Handler: com.nais.handlers.AuthHandler::handleRequest
      Runtime: java11
      MemorySize:
        Fn::If:
        - IsProduction
        - 1024
        - 512
      Timeout:
        Fn::If:
        - IsProduction
        - 60
        - 30
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
        - Sid: SecretsManagerAccess
          Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          - secretsmanager:DescribeSecret
          Resource:
            Ref: AuthLibrarySecrets
        - Sid: CognitoUserPoolAccess
          Effect: Allow
          Action:
          - cognito-idp:InitiateAuth
          - cognito-idp:AdminCreateUser
          - cognito-idp:AdminSetUserPassword
          - cognito-idp:GlobalSignOut
          - cognito-idp:AdminGetUser
          - cognito-idp:DescribeUserPool
          - cognito-idp:ListUsers
          Resource:
            Fn::Sub: arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPoolId}
        - Sid: CloudWatchLogsAccess
          Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
      Environment:
        Variables:
          USER_POOL_ID:
            Ref: CognitoUserPoolId
          CLIENT_ID:
            Ref: CognitoUserPoolClientId
          SECRET_NAME:
            Ref: AuthLibrarySecrets
          GOOGLE_CLIENT_ID:
            Ref: GoogleClientId
          GOOGLE_REDIRECT_URI:
            Fn::Sub: https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/google/callback
          COGNITO_DOMAIN_URL:
            Ref: CognitoDomainUrl
          COGNITO_APP_CLIENT_SECRET:
            Ref: CognitoUserPoolClientSecret
          OAUTH_CALLBACK_URL:
            Fn::Sub: https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/google/callback
          FRONTEND_URL:
            Ref: FrontendUrl
          WORKSPACE_AUTH_ENABLED:
            Ref: WorkspaceAuthStrict
          ALLOWED_EMAIL_DOMAINS:
            Fn::Join:
            - ','
            - Ref: AllowedEmailDomains
          DB_URL:
            Fn::Sub: jdbc:postgresql://${DBHost}:${DBPort}/${DBName}
          DB_USER:
            Ref: DBUser
          DB_PASSWORD:
            Ref: DBPassword
          AUTH_LIBRARY_VERSION: 2.1.0
          AUTH_ARCHITECTURE: amplify-like
          STAGE:
            Ref: Stage
      Tags:
        Application: Nais
        Environment:
          Ref: Stage
        Component: Authentication
        Architecture: Amplify-like
        WorkspaceAuth:
          Ref: WorkspaceAuthStrict
    Metadata:
      SamResourceId: AmplifyAuthFunction
  NaisRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        Fn::Sub: Nais-AmplifyAuth-Workspace-${Stage}
      Description:
        Fn::Sub: Nais Amplify-like Authentication API with Google Workspace validation
          (${Stage})
      EndpointConfiguration:
        Types:
        - PRIVATE
        VpcEndpointIds:
        - Ref: ApiGatewayVpcEndpointId
      Policy:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: '*'
          Action: execute-api:Invoke
          Resource: execute-api:/*
          Condition:
            StringEquals:
              aws:SourceVpce:
                Ref: ApiGatewayVpcEndpointId
  AmplifyAuthAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name:
        Fn::Sub: AmplifyAuth-Cognito-Workspace-${Stage}
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      RestApiId:
        Ref: NaisRestApi
      ProviderARNs:
      - Fn::Sub: arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPoolId}
  AuthResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Fn::GetAtt:
        - NaisRestApi
        - RootResourceId
      PathPart: auth
  AuthHealthResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: AuthResource
      PathPart: health
  AuthHealthMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: AuthHealthResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  AuthHealthOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: AuthHealthResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  GoogleResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: AuthResource
      PathPart: google
  GoogleLoginResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: GoogleResource
      PathPart: login
  GoogleLoginPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: GoogleLoginResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  GoogleLoginGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: GoogleLoginResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  GoogleLoginOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: GoogleLoginResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  GoogleCallbackResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: GoogleResource
      PathPart: callback
  GoogleCallbackPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: GoogleCallbackResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  GoogleCallbackGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: GoogleCallbackResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  GoogleCallbackOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: GoogleCallbackResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  GoogleProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: GoogleResource
      PathPart: proxy
  GoogleProxyPathResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: GoogleProxyResource
      PathPart: '{proxy+}'
  GoogleProxyAnyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: GoogleProxyResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  GoogleProxyPathAnyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: GoogleProxyPathResource
      HttpMethod: ANY
      AuthorizationType: NONE
      RequestParameters:
        method.request.path.proxy: true
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
        RequestParameters:
          integration.request.path.proxy: method.request.path.proxy
  WorkspaceResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: AuthResource
      PathPart: workspace
  WorkspaceDomainsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: WorkspaceResource
      PathPart: domains
  WorkspaceDomainsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: WorkspaceDomainsResource
      HttpMethod: GET
      AuthorizationType: AWS_IAM
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  WorkspaceDomainsOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: WorkspaceDomainsResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  TokenResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: AuthResource
      PathPart: token
  TokenRefreshResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: TokenResource
      PathPart: refresh
  TokenRefreshMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: TokenRefreshResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  TokenRefreshOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: TokenRefreshResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  LogoutResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: AuthResource
      PathPart: logout
  LogoutMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: LogoutResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  LogoutOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: LogoutResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AmplifyAuthFunction.Arn}/invocations
  CustomerResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Fn::GetAtt:
        - NaisRestApi
        - RootResourceId
      PathPart: customer
  CustomerGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: CustomerResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CustomerFunction.Arn}/invocations
  CustomerGetOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: CustomerResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CustomerFunction.Arn}/invocations
  CustomerCodeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ParentId:
        Ref: CustomerResource
      PathPart: '{code}'
  CustomerCodeGetMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: CustomerCodeResource
      HttpMethod: GET
      AuthorizationType: NONE
      RequestParameters:
        method.request.path.code: true
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CustomerFunction.Arn}/invocations
        RequestParameters:
          integration.request.path.code: method.request.path.code
  CustomerCodeGetOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: NaisRestApi
      ResourceId:
        Ref: CustomerCodeResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      RequestParameters:
        method.request.path.code: true
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CustomerFunction.Arn}/invocations
        RequestParameters:
          integration.request.path.code: method.request.path.code
  AmplifyAuthLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: AmplifyAuthFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${NaisRestApi}/*/*/*
  CustomerLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: CustomerFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${NaisRestApi}/*/*/*
  AmplifyApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - AuthHealthMethod
    - AuthHealthOptionsMethod
    - GoogleLoginPostMethod
    - GoogleLoginGetMethod
    - GoogleLoginOptionsMethod
    - GoogleCallbackPostMethod
    - GoogleCallbackGetMethod
    - GoogleCallbackOptionsMethod
    - GoogleProxyAnyMethod
    - GoogleProxyPathAnyMethod
    - WorkspaceDomainsMethod
    - WorkspaceDomainsOptionsMethod
    - TokenRefreshMethod
    - TokenRefreshOptionsMethod
    - LogoutMethod
    - LogoutOptionsMethod
    - CustomerGetMethod
    - CustomerGetOptionsMethod
    - CustomerCodeGetMethod
    - CustomerCodeGetOptionsMethod
    Properties:
      RestApiId:
        Ref: NaisRestApi
      StageName:
        Ref: Stage
  AmplifyAuthLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/Nais-AmplifyAuth-WorkspaceValidation-${Stage}
      RetentionInDays:
        Fn::If:
        - IsProduction
        - 30
        - 7
  CustomerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: Nais-CustomerAPI-${Stage}
      Description:
        Fn::Sub: Customer Master API for NAIS system (${Stage})
      CodeUri: CustomerFunction
      Handler: com.nais.handlers.CustomerHandler::handleRequest
      Runtime: java11
      MemorySize:
        Fn::If:
        - IsProduction
        - 1024
        - 512
      Timeout:
        Fn::If:
        - IsProduction
        - 60
        - 30
      Policies:
      - AWSLambdaBasicExecutionRole
      - Statement:
        - Sid: CloudWatchLogsAccess
          Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
      Environment:
        Variables:
          DB_URL:
            Fn::Sub: jdbc:postgresql://${DBHost}:${DBPort}/${DBName}
          DB_USER:
            Ref: DBUser
          DB_PASSWORD:
            Ref: DBPassword
          AUTH_MODE: OAUTH
          STAGE:
            Ref: Stage
          AUTH_LIBRARY_VERSION: 2.1.0
      Tags:
        Application: Nais
        Environment:
          Ref: Stage
        Component: CustomerAPI
    Metadata:
      SamResourceId: CustomerFunction
  CustomerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/Nais-CustomerAPI-${Stage}
      RetentionInDays:
        Fn::If:
        - IsProduction
        - 30
        - 7
Outputs:
  AmplifyAuthFunctionArn:
    Description: Amplify-like Authentication Lambda Function ARN with Workspace Validation
    Value:
      Fn::GetAtt:
      - AmplifyAuthFunction
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AmplifyAuthFunctionArn
  ApiGatewayId:
    Description: API Gateway ID
    Value:
      Ref: NaisRestApi
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiGatewayId
  ApiBaseEndpoint:
    Description: Base API endpoint (VPC private access)
    Value:
      Fn::Sub: https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ApiBaseEndpoint
  HealthCheckEndpoint:
    Description: Health check endpoint with workspace authentication info
    Value:
      Fn::Sub: https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/health
  GoogleLoginEndpoint:
    Description: Google login endpoint with workspace validation
    Value:
      Fn::Sub: https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/google/login
  GoogleCallbackEndpoint:
    Description: Google OAuth callback endpoint with workspace validation
    Value:
      Fn::Sub: https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/google/callback
  WorkspaceDomainsEndpoint:
    Description: Workspace domains configuration endpoint (admin access)
    Value:
      Fn::Sub: https://${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/workspace/domains
  SecretsManagerArn:
    Description: ARN of the Secrets Manager secret containing workspace configuration
    Value:
      Ref: AuthLibrarySecrets
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AuthLibrarySecrets
  WorkspaceAuthConfiguration:
    Description: Workspace authentication configuration summary
    Value:
      Fn::Sub:
      - 'Workspace Auth: ${WorkspaceAuthStrict}, Domains: ${DomainsString}, Stage:
        ${Stage}'
      - DomainsString:
          Fn::Join:
          - ','
          - Ref: AllowedEmailDomains
  DeploymentInstructions:
    Description: Post-deployment setup instructions for workspace authentication
    Value:
      Fn::Sub:
      - "\U0001F680 Deployment successful with Google Workspace authentication! \n\
        \n\U0001F4E7 Workspace Email Validation: ${WorkspaceAuthStrict}\n\U0001F4E7\
        \ Allowed Domains: ${DomainsString}\n\n\U0001F517 Next steps:\n1. Configure\
        \ Google OAuth redirect URI: ${NaisRestApi}-${ApiGatewayVpcEndpointId}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/auth/google/callback\n\
        2. Test health check: GET /auth/health\n3. Test Google login: POST /auth/google/login\n\
        4. Check workspace config: GET /auth/workspace/domains (admin access required)\n\
        \n\U0001F6E1\uFE0F Security Notes:\n- Only users from approved domains can\
        \ authenticate\n- Email validation is enforced at the Google OAuth callback\n\
        - Configuration is stored securely in AWS Secrets Manager\n"
      - DomainsString:
          Fn::Join:
          - ','
          - Ref: AllowedEmailDomains
