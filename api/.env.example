# =============================================================================
# NAIS AUTH LAMBDA ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and fill in your actual values
# For LOCAL DEVELOPMENT: Set ENVIRONMENT=local to use dummy authentication
# For AWS DEPLOYMENT: Fill in actual AWS/Cognito values

# =============================================================================
# LOCAL DEVELOPMENT MODE (RECOMMENDED FOR TESTING)
# =============================================================================

# Set to 'local' to enable dummy authentication (no AWS/Cognito required)
ENVIRONMENT=local

# Enable local development mode with dummy tokens
LOCAL_MODE=true

# Email to use for dummy authentication (default: dev@example.com)
LOCAL_DEV_EMAIL=dev@example.com

# Local frontend URL for redirects
LOCAL_FRONTEND_URL=http://localhost:3000

# =============================================================================
# AWS LAMBDA RUNTIME CONFIGURATION (matches template.yaml)
# =============================================================================

# Leave empty for local development, required for AWS deployment
AWS_REGION=

# Authentication library version (from template.yaml)
AUTH_LIBRARY_VERSION=2.1.0
AUTH_ARCHITECTURE=amplify-like
WORKSPACE_AUTH_ENABLED=true

# Deployment stage
STAGE=dev

# =============================================================================
# COGNITO CONFIGURATION (required for AWS deployment only)
# =============================================================================

# Cognito User Pool ID (leave empty for local mode)
USER_POOL_ID=

# Cognito User Pool Client ID (leave empty for local mode)
CLIENT_ID=

# Cognito Domain URL (leave empty for local mode)
COGNITO_DOMAIN_URL=

# Cognito App Client Secret (leave empty for local mode)
COGNITO_APP_CLIENT_SECRET=

# AWS Secrets Manager secret name (leave empty for local mode)
SECRET_NAME=

# =============================================================================
# GOOGLE OAUTH CONFIGURATION (required for AWS deployment only)
# =============================================================================

# Google OAuth Client ID (leave empty for local mode)
GOOGLE_CLIENT_ID=

# OAuth callback URL (leave empty for local mode)
OAUTH_CALLBACK_URL=
GOOGLE_REDIRECT_URI=

# =============================================================================
# WORKSPACE AUTHENTICATION (from template.yaml)
# =============================================================================

# Allowed email domains (comma-separated)
ALLOWED_EMAIL_DOMAINS=nais.com,company.com

# Individual allowed emails (comma-separated, optional)
ALLOWED_EMAILS=

# Frontend application URL
FRONTEND_URL=http://localhost:3000

# =============================================================================
# DATABASE CONFIGURATION (optional)
# =============================================================================

# Database connection details (from template.yaml)
DB_URL=jdbc:postgresql://localhost:5432/nais
DB_USER=postgres
DB_PASSWORD=password

# Individual database components
DB_HOST=localhost
DB_PORT=5432
DB_NAME=nais

# =============================================================================
# EXAMPLE: AWS DEPLOYMENT CONFIGURATION
# =============================================================================
# Uncomment and fill these values when deploying to AWS:

# ENVIRONMENT=dev
# LOCAL_MODE=false
# AWS_REGION=ap-northeast-1
# USER_POOL_ID=ap-northeast-1_XXXXXXXXX
# CLIENT_ID=your_cognito_client_id
# SECRET_NAME=dev-nais-auth-secrets-your-stack-name
# COGNITO_DOMAIN_URL=https://nais-stage.auth.ap-northeast-1.amazoncognito.com
# GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
# OAUTH_CALLBACK_URL=https://your-api-gateway-url/dev/auth/google/callback
# FRONTEND_URL=https://your-frontend-url.com

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. Never commit this file with actual secrets to version control
# 2. For local development, dummy authentication is used (secure for testing)
# 3. For AWS deployment, use AWS Secrets Manager for sensitive values
# 4. The LOCAL_MODE setting automatically enables dummy authentication
# 5. Workspace email validation is bypassed in local mode